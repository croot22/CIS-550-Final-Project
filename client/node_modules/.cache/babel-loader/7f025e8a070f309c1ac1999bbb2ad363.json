{"ast":null,"code":"var _jsxFileName = \"/Users/johnhentrich/550/Project/CIS-550-Final-Project/client/src/components/Posters.js\";\nimport React from 'react';\nimport '../style/Posters.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport Poster from './Poster';\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: []\n    };\n    this.apiConfig = {\n      omdb: {\n        //TODO: change key to your omdb api key here\n        key: \"<youromdbapikey>\",\n        uri: \"http://www.omdbapi.com/\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/movies/random\", {\n      method: 'GET'\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(moviesList => {\n      moviesList.forEach((movieObj, i) => {\n        let url = new URL(this.apiConfig.omdb.uri);\n        let params = {\n          apiKey: this.apiConfig.omdb.key,\n          i: movieObj.imdb_id\n        };\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n        fetch(url, {\n          method: 'GET'\n        }).then(res => {\n          return res.json();\n        }, err => {\n          console.log(err);\n        }).then(omdbMovieData => {\n          var movies = this.state.movies;\n          movies.push(React.createElement(Poster, {\n            key: i,\n            movie: omdbMovieData,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            },\n            __self: this\n          }));\n          this.setState({\n            movies: movies\n          });\n        });\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Posters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(PageNavbar, {\n      active: \"posters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container posters-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"movies-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.movies))));\n  }\n\n}","map":{"version":3,"sources":["/Users/johnhentrich/550/Project/CIS-550-Final-Project/client/src/components/Posters.js"],"names":["React","PageNavbar","Poster","Posters","Component","constructor","props","state","movies","apiConfig","omdb","key","uri","componentDidMount","fetch","method","then","res","json","err","console","log","moviesList","forEach","movieObj","i","url","URL","params","apiKey","imdb_id","Object","keys","searchParams","append","omdbMovieData","push","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Posters.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport Poster from './Poster';\nexport default class Posters extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: []\n    }\n\n    this.apiConfig = {\n      omdb: {\n        //TODO: change key to your omdb api key here\n        key:\"<youromdbapikey>\",\n        uri:\"http://www.omdbapi.com/\"\n      }\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/movies/random\",\n    {\n      method: 'GET'\n    }).then(res => {\n      return res.json();\n    }, err => {\n      console.log(err);\n    }).then(moviesList => {\n      moviesList.forEach((movieObj, i) => {\n        let url = new URL(this.apiConfig.omdb.uri);\n        let params = {\n          apiKey: this.apiConfig.omdb.key,\n          i: movieObj.imdb_id\n        }\n        Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n        fetch(url, {\n          method: 'GET',\n        }).then((res) => {\n          return res.json(); \n        }, err => {\n          console.log(err);\n        }).then(omdbMovieData => {\n          var movies = this.state.movies;\n          movies.push(<Poster key={i} movie={omdbMovieData}></Poster>);\n          this.setState({movies: movies});\n        });\n      });\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  render() {    \n    return (\n      <div className=\"Posters\">\n\n        <PageNavbar active=\"posters\" />\n\n        <br></br>\n        <div className=\"container posters-container\">\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              {this.state.movies}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}